package com.raga.tools.billing.vertical;

import com.raga.tools.billing.RequestType;
import io.vertx.core.eventbus.EventBus;
import io.vertx.core.json.JsonArray;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.sql.SQLConnection;
import io.vertx.ext.sql.SQLOptions;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by ragha on 22-04-2018.
 */
public class AdminVertical extends AbstractDBVertical {
    private static final String CREATE_ITEM_SQL = "insert into MenuItems (Item,Description,Price,Active,UpdatedBy) value (?,?,?,?,?)";
    private static final String CREATE_OR_GET_CUSTOMERS = "insert into Customers (MobileNo,Name,Address,UpdatedBy) value (?,?,?,?)";

    @Override
    public void start() throws Exception {
        EventBus eventBus = vertx.eventBus();

        eventBus.<JsonObject>consumer(RequestType.CREATE_MENU_ITEM.name(), message -> {
            JsonObject menuItem = message.body().getJsonObject("menuItem");
            String user = menuItem.getString("user");
            String itemName = menuItem.getString("item");
            String desc = menuItem.getString("desc");
            float price = menuItem.getFloat("price");

            JsonArray params = new JsonArray().add(itemName).add(desc).add(price).add("Y").add(user);
            executeUpdate(CREATE_ITEM_SQL, params, message);
        });

        eventBus.<JsonObject>consumer(RequestType.CREATE_GET_CUSTOMERS.name(), message -> {
            getJdbcClient().getConnection(handler -> {
                if (handler.failed()) {
                    message.fail(500, "Couldn't get DB Connections");
                } else {
                    try (SQLConnection connection = handler.result()) {
                        connection.setOptions(new SQLOptions().setAutoGeneratedKeys(true));
                        JsonObject menuItem = message.body().getJsonObject("menuItem");
                        String user = menuItem.getString("user");
                        String itemName = menuItem.getString("item");
                        String desc = menuItem.getString("desc");
                        float price = menuItem.getFloat("price");

                        connection.updateWithParams(CREATE_ITEM_SQL, new JsonArray()
                                .add(itemName)
                                .add(desc)
                                .add(price)
                                .add("Y")
                                .add(user)
                                , bill -> {
                            if (bill.failed()) {
                                message.fail(500, "Failed while creating item. Please retry");
                            } else {
                                message.reply("Item created successfully");
                            }
                        });
                    } catch (Exception e) {
                        message.fail(500, e.getMessage());
                    }
                }
            });
        });
    }
}
