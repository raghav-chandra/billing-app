package com.raga.tools.billing.vertical;

import com.raga.tools.billing.RequestType;
import io.vertx.core.eventbus.EventBus;
import io.vertx.core.json.JsonArray;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.sql.ResultSet;
import io.vertx.ext.sql.SQLConnection;
import io.vertx.ext.sql.SQLOptions;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by ragha on 22-04-2018.
 */
public class BillingVertical extends AbstractDBVertical {

    private static final String CREATE_BILL_SQL = "insert into Bills (CustomerId,UpdatedBy) value (?,?)";
    private static final String CREATE_BILL_ITEM_SQL = "insert into BillItems (BillId,ItemId,Quantity,GSTPerc,DiscountPerc,UpdatedBy) value (?,?,?,?,?,?)";

    @Override
    public void start() throws Exception {
        EventBus eventBus = vertx.eventBus();

        eventBus.<JsonObject>consumer(RequestType.CREATE_BILL.name(), message -> {
            getJdbcClient().getConnection(handler -> {
                if (handler.failed()) {
                    message.fail(500, "Couldn't get DB Connections");
                } else {
                    try (SQLConnection connection = handler.result()) {
                        connection.setOptions(new SQLOptions().setAutoGeneratedKeys(true));
                        JsonObject billObj = message.body().getJsonObject("bill");
                        String user = billObj.getString("user");
                        int customerId = billObj.getInteger("customerId");
                        JsonArray billItems = billObj.getJsonArray("billItems");

                        connection.updateWithParams(CREATE_BILL_SQL, new JsonArray().add(customerId).add(user), bill -> {
                            if (bill.failed()) {
                                message.fail(500, "Failed while creating bill. Please retry");
                            } else {
                                int billId = bill.result().getKeys().getInteger(0);
                                List<JsonArray> params = new ArrayList<JsonArray>();
                                billItems.forEach(itemObj -> {
                                    JsonObject item = (JsonObject) itemObj;
                                    params.add(new JsonArray()
                                            .add(billId)
                                            .add(item.getInteger("ïtemId"))
                                            .add(item.getInteger("quantity"))
                                            .add(item.getFloat("gst"))
                                            .add(item.getFloat("discount")));
                                });
                                connection.batchWithParams(CREATE_BILL_ITEM_SQL, params, billItemHandler -> {
                                    if (billItemHandler.failed()) {
                                        message.fail(500, "Failed while creating bill. Please retry");
                                    } else {
                                        message.reply("Bill created successfully");
                                    }
                                });
                            }
                        });
                    } catch (Exception e) {
                        message.fail(500, e.getMessage());
                    }
                }

            });
        });

    }
}
